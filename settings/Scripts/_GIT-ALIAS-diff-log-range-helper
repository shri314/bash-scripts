#!/bin/bash

set -euo pipefail

if [ $# -lt 3 ]
then
    echo "ALIAS USAGE: $0 <log|diff> <mb|fp> <u|h> [<git log modifier options...>|<git diff modifier options...>]"
    exit 1
fi

OP=$1; shift
TIP_BEG=$1; shift
TIP_END=$1; shift

BR=
US=

PRE_OPT=()
POST_OPT=()

while [ $# -gt 0 ]
do
    case "$1" in
    -*)
        PRE_OPT+=( "$1" );
        shift
        ;;
    *)
        BR=$1
        shift;
        break
        ;;
    esac
done

BR=${BR:-HEAD}

if [ $# -gt 0 ] && ! [ "$1" = -* ]; then
    US=$1
    shift
else
    US=${US:-"${BR}@{upstream}"}
fi

POST_OPT=( "$@" )

readonly BR
readonly US
readonly PRE_OPT
readonly POST_OPT

########################################################################

readonly BR_HASH=$(git rev-parse "${BR}")
readonly US_HASH=$(git rev-parse "${US}")

MERGE_BASE=$(git merge-base "${US_HASH}" "${BR_HASH}")

if [ "$MERGE_BASE" == "$BR_HASH" ] && [ "$TIP_BEG" == "fp" ]
then
    #get the merge point
    readonly MERGE_COMMIT=$(tail -1 <(git log --merges --ancestry-path "${BR_HASH}..${US_HASH}" --pretty=format:%H))
    if [ "${MERGE_COMMIT}" ]
    then
        #recompute MERGE_BASE from 1st parent of MERGE_COMMIT
        MERGE_BASE=$(git merge-base "${MERGE_COMMIT}^1" "${BR_HASH}")
    fi
fi

readonly MERGE_BASE

[ $TIP_END == "h" ] && git "$OP" "${PRE_OPT[@]+${PRE_OPT[@]}}" "${MERGE_BASE}..${BR_HASH}" "${POST_OPT[@]+${POST_OPT[@]}}"
[ $TIP_END == "u" ] && git "$OP" "${PRE_OPT[@]+${PRE_OPT[@]}}" "${MERGE_BASE}..${US_HASH}" "${POST_OPT[@]+${POST_OPT[@]}}"
